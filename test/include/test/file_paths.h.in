#pragma once

#include <filesystem>
#include <vector>

#include "soro/utls/coroutine/generator.h"

#include "soro/infrastructure/infrastructure_options.h"
#include "soro/timetable/timetable_options.h"

namespace fs = std::filesystem;

namespace soro {

///////////////////////////////////////////////////////////////////////
// Check if you are editing file_paths.h.in instead of file_paths.h //
//////////////////////////////////////////////////////////////////////

auto const BASE_PATH = fs::path("${CMAKE_CURRENT_SOURCE_DIR}") / "resources";

// --- misc files ---
auto const SORO_CSV_PATH = BASE_PATH / "misc/SORO_Betriebsstellen.csv";
auto const SORO_COORD_PATH = BASE_PATH / "misc/btrs_geo.csv";

// --- infrastructure files ---

auto const SMALL_FOLDER = BASE_PATH / "infrastructure/small/";

infra::infrastructure_options const SMALL_OPTS = {
    .determine_conflicts_ = true,
    .gps_coord_path_ = SORO_COORD_PATH,
    .infrastructure_path_ = SMALL_FOLDER,
};

const std::vector<infra::infrastructure_options> ALL_INFRA_OPTS = {SMALL_OPTS};

// --- timetable files ---

auto const FOLLOW_FOLDER = BASE_PATH / "timetable/csv/follow/";
auto const FOLLOW_ARCHIVE = FOLLOW_FOLDER / "follow.fpl";

auto const OVERTAKE_FOLDER = BASE_PATH / "timetable/csv/overtake/";
auto const OVERTAKE_ARCHIVE = OVERTAKE_FOLDER / "overtake.fpl";

// --- Timetable Options --- //
tt::timetable_options const OVERTAKE_OPTS = {.timetable_path_ =
                                                 OVERTAKE_FOLDER};

tt::timetable_options const FOLLOW_OPTS = {.timetable_path_ = FOLLOW_FOLDER};

const std::vector<tt::timetable_options> ALL_TIMETABLE_OPTIONS = {OVERTAKE_OPTS,
                                                                  FOLLOW_OPTS};

// --- All Test Scenarios ---
struct test_scenario {
  infra::infrastructure_options infra_opts_;
  tt::timetable_options timetable_opts_;
};

inline soro::utls::generator<test_scenario> GET_ALL_TEST_SCENARIOS() {
  for (auto const& infra : ALL_INFRA_OPTS) {
    for (auto const& tt : ALL_TIMETABLE_OPTIONS) {
      std::cout << "Test Scenario:\n";
      std::cout << "Infrastructure Path: " << infra.infrastructure_path_
                << '\n';
      std::cout << "Timetable Path: " << tt.timetable_path_ << '\n';

      co_yield {.infra_opts_ = infra, .timetable_opts_ = tt};
    }
  }
}

}  // namespace soro
